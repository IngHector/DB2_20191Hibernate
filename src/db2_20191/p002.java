/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package db2_20191;

import entities.Department;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author OFhec
 */
public class p002 extends javax.swing.JFrame {
    private static DefaultTableModel modelo;
    EmployeeModel em = new EmployeeModel();
    DepartmentModel dm = new DepartmentModel();
    Emp_ActModel am=new Emp_ActModel();
    ProjectModel pm=new ProjectModel();
    
    final String deptno = "DEPTNO";
    final String deptname = "DEPTNAME";
    final String mgrno = "MGRNO";
    final String admrdept = "ADMRDEPT";
    final String location = "LOCATION";

    final String empno = "EMPNO";
    final String firstnme = "FIRSTNME";
    final String midinit = "MIDINIT";
    final String lastname = "LASTNAME";
    final String phoneno = "PHONENO";
    final String workdept = "WORKDEPT";
    final String hiredate = "HIREDATE";
    final String job = "JOB";
    final String edlevel = "EDLEVEL";
    final String sex = "SEX";
    final String birthdate = "BIRTHDATE";
    final String salary = "SALARY";
    final String bonus = "BONUS";
    final String comm = "COMM";
    
    final String projno="PROJNO";
    final String projname="PROJNAME";
    final String actno="ACTNO";
    final String emptime="EMPTIME";
    final String emstdate="EMSTDATE";
    final String emendate="EMENDATE";

    public p002() {
        initComponents();
        setLocationRelativeTo(null);
         cb1.addItem("query18");
        cb1.addItem("query19");
        cb1.addItem("query20");
        cb1.addItem("query21");
        cb1.addItem("query22");
        cb1.addItem("query23");
        cb1.addItem("query24");
        cb1.addItem("query25");
        cb1.addItem("query26");
        cb1.addItem("query27");
        cb1.addItem("query28");
        cb1.addItem("query29");
        cb1.addItem("query30");
        cb1.addItem("query31");
        cb1.addItem("query32");
        query18();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(436, 432));

        jLabel1.setFont(new java.awt.Font("Verdana", 2, 24)); // NOI18N
        jLabel1.setText("Página 002");

        cb1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton1.setLabel("Ejecutar Consulta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        t2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(t2);

        jButton2.setText("Página Siguiente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Página Anterior");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        switch (cb1.getSelectedIndex() + 1) {
            case 1:
                query18();
                break;
            case 2:
                query19();
                break;
            case 3:
                query20();
                break;
            case 4:
                query21();
                break;
            case 5:
                query22();
                break;
            case 6:
                query23();
                break;
            case 7:
                query24();
                break;
            case 8:
                query25();
                break;
            case 9:
                query26();
                break;
            case 10:
                query27();
                break;
            case 11:
                query28();
                break;
            case 12:
                query29();
                break;
            case 13:
                query30();
                break;
            case 14:
                query31();
                break;
            case 15:
                query32();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void query18() {
        List<Object[]> l1 = em.query18();

        modelo = new DefaultTableModel();
        modelo.addColumn(empno);
        modelo.addColumn(lastname);
        modelo.addColumn(birthdate);
        modelo.addColumn(salary);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    
    public void query19(){
    List<Object[]> l1 = em.query19();

        modelo = new DefaultTableModel();
        modelo.addColumn(lastname);
        modelo.addColumn(firstnme);
        modelo.addColumn(workdept);
        Object[] object = new Object[3];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query20(){
    List<Object> l1 = em.query20();

        modelo = new DefaultTableModel();
        modelo.addColumn(edlevel);
        Object[] object = new Object[1];
        for (Object d : l1) {
            object[0] = d;
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query21(){
    List<Object[]> l1 = am.query21();

        modelo = new DefaultTableModel();
        modelo.addColumn(empno);
        modelo.addColumn(projno);
        Object[] object = new Object[2];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query22(){
    List<Object[]> l1 = em.query22();

        modelo = new DefaultTableModel();
        modelo.addColumn(lastname);
        modelo.addColumn(salary);
        modelo.addColumn(bonus);
        Object[] object = new Object[3];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query23(){
    List<Object[]> l1 = em.query23();

        modelo = new DefaultTableModel();
        modelo.addColumn(lastname);
        modelo.addColumn(salary);
        modelo.addColumn(comm);
        Object[] object = new Object[3];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query24(){
    List<Object[]> l1 = em.query24();

        modelo = new DefaultTableModel();
        modelo.addColumn(lastname);
        modelo.addColumn(salary);
        modelo.addColumn(bonus);
        modelo.addColumn(comm);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query25(){
     List<Object[]> l1 = em.query25();

        modelo = new DefaultTableModel();
        modelo.addColumn(lastname);
        modelo.addColumn(salary);
        modelo.addColumn(bonus);
        modelo.addColumn(comm);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query26(){
    List<Object[]> l1 = am.query26();

        modelo = new DefaultTableModel();
        modelo.addColumn(projno);
        modelo.addColumn(actno);
        modelo.addColumn(emstdate);
        modelo.addColumn(emendate);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query27(){
    List<Object[]> l1 = dm.query27();

        modelo = new DefaultTableModel();
        modelo.addColumn(mgrno);
        modelo.addColumn(deptname);
        Object[] object = new Object[2];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query28(){
    List<Object[]> l1 = em.query28();

        modelo = new DefaultTableModel();
        modelo.addColumn(empno);
        modelo.addColumn(lastname);
        modelo.addColumn(salary);
        modelo.addColumn(bonus);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query29(){
     List<Object[]> l1 = em.query29();

        modelo = new DefaultTableModel();
        modelo.addColumn(empno);
        modelo.addColumn(lastname);
        modelo.addColumn(salary);
        modelo.addColumn(workdept);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query30(){
    List<Object[]> l1 = pm.query30();

        modelo = new DefaultTableModel();
        modelo.addColumn(projno);
        modelo.addColumn(projname);
        Object[] object = new Object[2];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query31(){
     List<Object[]> l1 = dm.query31();

        modelo = new DefaultTableModel();
        modelo.addColumn(deptno);
        modelo.addColumn(deptname);
        Object[] object = new Object[2];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    public void query32(){
    List<Object[]> l1 = em.query32();

        modelo = new DefaultTableModel();
        modelo.addColumn(lastname);
        modelo.addColumn(firstnme);
        modelo.addColumn(midinit);
        modelo.addColumn(salary);
        Object[] object = new Object[4];
        for (Object[] d : l1) {
            object[0] = d[0];
            object[1] = d[1];
            object[2] = d[2];
            object[3] = d[3];
            modelo.addRow(object);
        }
        t2.setModel(modelo);
    }
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        p001 pg1 = new p001();
    pg1.setLocationRelativeTo(null);
    this.setVisible(false);
    pg1.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     p004 pg4 = new p004();
    pg4.setLocationRelativeTo(null);
    this.setVisible(false);
    pg4.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new p002().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cb1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable t2;
    // End of variables declaration//GEN-END:variables

    
}
